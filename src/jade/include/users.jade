section#users.col-12
  .container
    h3.taped User Objects
    .content
      p Users are special data types in the Sparse API. As such,
        strong sparse.User 
        is simply a sparse.Model with modifications that allow it to interface with the Sparse User API
      p
        strong Usage Example
      pre
        = "var aUser = new sparse.User();\nuser.save({username:\"a.user\", password:\"sParse\", email:\"your.address@email.com\"},{\n  success: function(m, r, o) {\n   return console.log(\"Parse Response: \" + (JSON.stringify(r)));\n  },\n  error: function(m, r, o) {\n    return console.log(m);\n  }\n});"
    form.form-inline(role="form")
      .row
        .form-group.col-4
          label ObjectId:
          span#user_objectId.form-control(name="user_objectId", data-text="user.objectId") {objectId}
        .form-group.col-4
          label(for="user_name") User Name:
          input#user_name.form-control(name="user_name", type="text", placeholder="User Name", data-value="user.username")
        .form-group.col-4
          label(for="user_email") Email:
          input#user_email.form-control(name="user_email", type="email", placeholder="Email Address", data-value="user.email")
         .form-group.col-4
          label(for="user_password") Password:
          input#user_password.form-control(name="user_password", type="password", placeholder="Password", data-value="user.password")
      .row
        .form-group.col-12.pull-right
          button#create_user.btn.api-btn Create
          button#login_user.btn.api-btn(disabled="true") Login
          button#logout_user.btn.api-btn(disabled="true") Logout
          button#destroy_user.btn.api-btn(disabled="true") Delete